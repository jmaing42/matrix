cmake_minimum_required(VERSION 2.8.12)
project(miniRT C)

set(CMAKE_C_STANDARD 11)
set(CMAKE_C_STANDARD_REQUIRED ON)
if (CMAKE_C_COMPILER_ID MATCHES "Clang" OR CMAKE_COMPILER_IS_GNUCC)
  add_compile_options(-Wall -Wextra -Werror -pedantic)
endif()
if (MSVC)
  add_compile_options(/W4 /WX /wd4200)
endif()

include_directories(include)

option(TARGET_ARCH "Target architecture's SIMD instruction set (valid values: none SSE SSE2 SSE3 SSSE3 SSE4.1 SSE4.2 AVX AVX2 AVX512 ARMv7-A ARMv8-A ARMv8.1-A ARMv8.2-A ARMv8.3-A ARMv8.4-A ARMv8.5-A ARMv8.6-A ARMv9.0-A ARMv9.2-A)" "none")

if (NOT TARGET_ARCH)
  set(TARGET_ARCH "none")
  set(TARGET_ARCH_VALUE "NONE")
elseif (TARGET_ARCH STREQUAL "none")
  set(TARGET_ARCH_VALUE "NONE")
elseif (TARGET_ARCH STREQUAL "SSE")
  set(TARGET_ARCH_VALUE "SSE")
elseif (TARGET_ARCH STREQUAL "SSE2")
  set(TARGET_ARCH_VALUE "SSE2")
elseif (TARGET_ARCH STREQUAL "SSE3")
  set(TARGET_ARCH_VALUE "SSE3")
elseif (TARGET_ARCH STREQUAL "SSE3")
  set(TARGET_ARCH_VALUE "SSE3")
elseif (TARGET_ARCH STREQUAL "SSSE3")
  set(TARGET_ARCH_VALUE "SSSE3")
elseif (TARGET_ARCH STREQUAL "SSE4.1")
  set(TARGET_ARCH_VALUE "SSE4_1")
elseif (TARGET_ARCH STREQUAL "SSE4.2")
  set(TARGET_ARCH_VALUE "SSE4_2")
elseif (TARGET_ARCH STREQUAL "AVX")
  set(TARGET_ARCH_VALUE "AVX")
elseif (TARGET_ARCH STREQUAL "AVX2")
  set(TARGET_ARCH_VALUE "AVX2")
elseif (TARGET_ARCH STREQUAL "AVX512")
  set(TARGET_ARCH_VALUE "AVX512")
elseif (TARGET_ARCH STREQUAL "ARMv7-A")
  set(TARGET_ARCH_VALUE "ARMV7A")
elseif (TARGET_ARCH STREQUAL "ARMv8-A")
  set(TARGET_ARCH_VALUE "ARMV8A")
elseif (TARGET_ARCH STREQUAL "ARMv8.1-A")
  set(TARGET_ARCH_VALUE "ARMV8_1A")
elseif (TARGET_ARCH STREQUAL "ARMv8.2-A")
  set(TARGET_ARCH_VALUE "ARMV8_2A")
elseif (TARGET_ARCH STREQUAL "ARMv8.3-A")
  set(TARGET_ARCH_VALUE "ARMV8_3A")
elseif (TARGET_ARCH STREQUAL "ARMv8.4-A")
  set(TARGET_ARCH_VALUE "ARMV8_4A")
elseif (TARGET_ARCH STREQUAL "ARMv8.5-A")
  set(TARGET_ARCH_VALUE "ARMV8_5A")
elseif (TARGET_ARCH STREQUAL "ARMv8.6-A")
  set(TARGET_ARCH_VALUE "ARMV8_6A")
elseif (TARGET_ARCH STREQUAL "ARMv9.0-A")
  set(TARGET_ARCH_VALUE "ARMV9_0A")
elseif (TARGET_ARCH STREQUAL "ARMv9.2-A")
  set(TARGET_ARCH_VALUE "ARMV9_2A")
else()
  message(FATAL_ERROR "Invalid value for TARGET_ARCH. Valid values are: none, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512, ARMv7-A, ARMv8-A, ARMv8.1-A, ARMv8.2-A, ARMv8.3-A, ARMv8.4-A, ARMv8.5-A, ARMv8.6-A, ARMv9.0-A, ARMv9.2-A.")
endif()

add_definitions(-DFT_MATRIX_TARGET_${TARGET_ARCH_VALUE})

file(GLOB_RECURSE SRC "src/*.c")
add_library(a_ft_matrix.${TARGET_ARCH_VALUE} STATIC ${SRC})
set_target_properties(a_ft_matrix.${TARGET_ARCH_VALUE} PROPERTIES OUTPUT_NAME "ft_matrix")
add_library(so_ft_matrix.${TARGET_ARCH_VALUE} STATIC ${SRC})
set_target_properties(so_ft_matrix.${TARGET_ARCH_VALUE} PROPERTIES OUTPUT_NAME "ft_matrix")
